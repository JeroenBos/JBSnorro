name: CI

on:
  push:
    branches: [ master ]
    paths-ignore:
    - '**.md'
  pull_request:
    paths-ignore:
    - '**.md'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            runtime: win10-x64
          - os: ubuntu-latest
            runtime: linux-x64
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.201  # select a 'sdk'.'version' from https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/6.0/releases.json

    - name: Build
      run: dotnet build JBSnorro/JBSnorro.csproj

    - name: Create ssh access file
      shell: bash
      run: |
        echo "$SSH_FILE=$HOME/.ssh/playground" >> $GITHUB_ENV
        mkdir ~/.ssh
        echo "${{secrets.PLAYGROUND_SSH_KEY}}" > "$SSH_FILE"
        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

    - name: Give access to ssh key (Linux)
      if: ${{ matrix.runtime == 'linux-x64' }} 
      run: sudo chmod 600 "$SSH_FILE"

    - name: Test
      shell: bash
      run: |
          dotnet test JBSnorro.Tests/JBSnorro.Tests.csproj \
                      --runtime ${{ matrix.runtime }}      \
                      --framework net6.0
      timeout-minutes: 5



  publish:
    needs: test
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Detect if version changed
      continue-on-error: true
      id: up-to-date
      run: | 
        current_version=$(bash .github/get_current_version.sh | xargs)
        published_version=$(bash .github/get_published_version.sh | xargs)
        echo "current_version: \"$current_version\""
        echo "published_version: \"$published_version\""

        is_up_to_date=$([[ "$current_version" == "$published_version" ]] && echo true || echo false)
        echo "is_up_to_date: $is_up_to_date"

        if [ "$is_up_to_date" = "true" ]; then
            echo "Up-to-date"
            exit 1
        else
            echo "Publishing"
        fi

    - name: Setup .NET Core
      if: ${{ steps.up-to-date.outcome != 'failure' }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.101

    - name: Install dependencies
      if: ${{ steps.up-to-date.outcome != 'failure' }}
      run: dotnet restore

    - name: Build
      if: ${{ steps.up-to-date.outcome != 'failure' }}
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      if: ${{ steps.up-to-date.outcome != 'failure' }}
      uses: alirezanet/publish-nuget@v3.0.0  # atm, this bugfix is not merged yet: https://github.com/brandedoutcast/publish-nuget/pull/62
      with:
          PROJECT_FILE_PATH: JBSnorro/JBSnorro.csproj
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
