name: CI

on:
  push:
    branches: [ master , auto-upload-to-nuget ] # for testing  # TODO
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # - os: windows-latest  # TODO
          # runtime: win10-x64  # TODO
          - os: ubuntu-latest
            runtime: linux-x64
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.101  # select a 'sdk'.'version' from https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/6.0/releases.json
    - name: build
      run: dotnet build JBSnorro/JBSnorro.csproj
    - name: Create ssh access file
      shell: bash
      run: |
        mkdir ~/.ssh
        echo "${{secrets.PLAYGROUND_SSH_KEY}}" > ~/.ssh/playground
        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

    - name: Give access to ssh key (Linux)
      if: ${{ matrix.runtime == 'linux-x64' }} 
      run: sudo chmod 600 ~/.ssh/playground
    - name: test
      shell: bash
      run: | 
          export SSH_FILE="$HOME/.ssh/playground"
          dotnet test JBSnorro.Tests/JBSnorro.Tests.csproj --runtime ${{ matrix.runtime }} --framework net6.0
      timeout-minutes: 5



  build:
    needs: test
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Detect if version changed
      run: | 
        set -eu
        current_version=$(bash .github/get_current_version.sh)
        published_version=$(bash .github/get_published_version.sh)
        if [ "$current_version" = "$published_version" ] ; then
            echo "Up-to-date"
            exit 1
        fi
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.101
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    # - name: Publish
    #   uses: brandedoutcast/publish-nuget@v2.5.2
    #   with:
    #       PROJECT_FILE_PATH: JBSnorro/JBSnorro.csproj
    #       NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    #       INCLUDE_SYMBOLS: true
