name: CI

on:
  push:
    branches: [ master ]
    paths-ignore:
    - '**.md'
  pull_request:
    paths-ignore:
    - '**.md'

env:
    DOTNET_VERSION: 7.0.102  # select a 'sdk'.'version' from https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/7.0/releases.json
    DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  test:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Build
      run: dotnet build JBSnorro/JBSnorro.csproj

    - name: Create ssh access file
      shell: bash
      run: |
        mkdir ~/.ssh
        echo "${{secrets.PLAYGROUND_SSH_KEY}}" > ~/.ssh/playground
        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
    - name: Give access to ssh key (Linux)
      if: ${{ matrix.os == 'ubuntu-latest' }} 
      run: sudo chmod 600 ~/.ssh/playground

    - name: Test
      shell: bash
      run: | 
          export SSH_FILE="$HOME/.ssh/playground"
          dotnet test JBSnorro.Tests/JBSnorro.Tests.csproj
          # Can't add '--no-build' as optimization because the test project hasn't been built yet
      timeout-minutes: 5



  publish:
    needs: test
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Detect if version changed
      continue-on-error: true
      id: up-to-date
      run: | 
        current_version=$(bash .github/get_current_version.sh | xargs)
        published_version=$(bash .github/get_published_version.sh | xargs)
        echo "current_version: \"$current_version\""
        echo "published_version: \"$published_version\""

        is_up_to_date=$([[ "$current_version" == "$published_version" ]] && echo true || echo false)
        echo "is_up_to_date: $is_up_to_date"

        if [[ "$(is_up_to_date)" == "true" ]]; then
            echo "Up-to-date"
            exit 1
        else
            echo "Publishing"
        fi

    - name: Setup .NET Core
      if: ${{ steps.up-to-date.outcome != 'failure' }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install dependencies
      if: ${{ steps.up-to-date.outcome != 'failure' }}
      run: dotnet restore

    - name: Build
      if: ${{ steps.up-to-date.outcome != 'failure' }}
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      if: ${{ steps.up-to-date.outcome != 'failure' }}
      uses: alirezanet/publish-nuget@v3.0.0  # atm, this bugfix is not merged yet: https://github.com/brandedoutcast/publish-nuget/pull/62
      with:
          PROJECT_FILE_PATH: JBSnorro/JBSnorro.csproj
          NUGET_KEY: ${{ secrets.NUGET_API_KEY }}
          INCLUDE_SYMBOLS: true
