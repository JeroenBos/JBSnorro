name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
    - '**.md'
  pull_request:
    paths-ignore:
    - '**.md'

env:
    DOTNET_VERSION: 7.0.102  # select a 'sdk'.'version' from https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/7.0/releases.json
    DOTNET_CLI_TELEMETRY_OPTOUT: true

defaults:
  run:
    shell: bash

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
          
    - uses: actions/checkout@v3
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Create NODE_PATH env var
      run: echo "NODE_PATH=$(which node)$([[ '${{ matrix.os }}' == 'windows-latest' ]] && echo -n '.exe')" >> $GITHUB_ENV 

    - name: Create SSH_FILE env var 
      run: echo "SSH_FILE=$HOME/.ssh/playground" >> $GITHUB_ENV

    - name: Prepare ssh access
      run: |
          mkdir "$(dirname "$SSH_FILE")"
          echo "${{secrets.PLAYGROUND_SSH_KEY}}" > "$SSH_FILE"
          
          # Give access to ssh key (Linux)
          if [[ '${{ matrix.os }}' == 'ubuntu-latest' ]]; then
              sudo chmod 600 "$SSH_FILE"
          fi

          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

    - run: dotnet build

    - id: should-test-gh
      uses: tj-actions/verify-changed-files@v13
      with:
        files: |
           JBSnorro/Git/*
           JBSnorro/JS/*
           JBSnorro.Tests/Csx/*

    - name: Unit test
      if: ${{ steps.should-test-gh.outputs.files_changed == 'true' && github.event.pull_request.draft == true }}
      run: dotnet test JBSnorro.Tests/JBSnorro.Tests.csproj --filter "TestCategory!=Integration"
      timeout-minutes: 5

    - name: Unit test + integration tests
      if: ${{ ! (steps.should-test-gh.outputs.files_changed == 'true' && github.event.pull_request.draft == true) }}
      run: dotnet test JBSnorro.Tests/JBSnorro.Tests.csproj
      timeout-minutes: 5
