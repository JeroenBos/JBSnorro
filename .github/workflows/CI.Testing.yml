name: CI (JBSnorro.Testing)

on:
  push:
    branches: [ main ]
    paths-ignore:
    - '**.md'
  pull_request:
    paths-ignore:
    - '**.md'

env:
  DOTNET_SDK_VERSION: 7.0.400  # select a 'sdk'.'version' from https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/7.0/releases.json
  DOTNET_VERSION: net7.0
  DOTNET_CLI_TELEMETRY_OPTOUT: true

defaults:
  run:
    shell: bash
jobs:
  test-testing:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          configuration: Debug
        - os: ubuntu-latest
          configuration: Release
        - os: windows-latest
          configuration: Debug
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
    - name: Create dummy runsettings file
      # in CI env vars are passed in directly, so the runsettings file can be empty
      run: echo '<RunSettings></RunSettings>' > test.runsettings
    
    - name: build
      run: dotnet build JBSnorro.Testing/JBSnorro.Testing.csproj
    - name: Publish to local Package Source (such that `dotnet build` can resolve latest package versions)
      run: |
          TempPackageSource="$(mktemp -d)"
          echo "TempPackageSource=$TempPackageSource" >> $GITHUB_ENV
          dotnet publish                       \
                 --configuration Release       \
                 --framework "$DOTNET_VERSION" \
                 --output "$TempPackageSource" \
                 JBSnorro/JBSnorro.csproj
          dotnet nuget add source "$TempPackageSource"
          cd "$TempPackageSource"
          ls
    - name: build tests
      run: dotnet build JBSnorro.Testing.Tests/JBSnorro.Testing.Tests.csproj --configuration ${{ matrix.configuration }}
    - name: test
      run: dotnet test  JBSnorro.Testing.Tests/JBSnorro.Testing.Tests.csproj --configuration ${{ matrix.configuration }} --framework ${{ env.DOTNET_VERSION }}
      timeout-minutes: 10
