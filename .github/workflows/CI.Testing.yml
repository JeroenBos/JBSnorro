name: CI (JBSnorro.Testing)

on:
  push:
    branches: [ main ]
    paths-ignore:
    - '**.md'
  pull_request:
    paths-ignore:
    - '**.md'

env:
  DOTNET_VERSION: 8.0.303  # select a 'sdk'.'version' from https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/7.0/releases.json
  DOTNET_CLI_TELEMETRY_OPTOUT: true

defaults:
  run:
    shell: bash
jobs:
  test-testing:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-22.04
          configuration: Debug
        - os: ubuntu-22.04
          configuration: Release
        - os: windows-latest
          configuration: Debug
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Create dummy runsettings file
      # in CI env vars are passed in directly, so the runsettings file can be empty
      run: echo '<RunSettings></RunSettings>' > test.runsettings
    
    - name: Create local Package Source
      run: |
          TempPackageSource="$(mktemp -d)"
          if [[ "$(uname -s)" =~ MING* ]]; then
              # on Windows
              TempPackageSource="$(echo "$TempPackageSource" | sed 's/\/tmp/%TMP%/')"
          fi
          echo "TempPackageSource=$TempPackageSource" | tee $GITHUB_ENV
          dotnet nuget add source "$TempPackageSource" --name 'TempPackageSource'
          dotnet nuget enable source 'TempPackageSource'
    - name: Publish to local Package Source (such that `dotnet build` can resolve latest package versions)
      run: dotnet build JBSnorro/JBSnorro.csproj --configuration Release --output "$TempPackageSource"
                  
    - name: build
      run: dotnet build JBSnorro.Testing/JBSnorro.Testing.csproj
  
    - name: build tests
      run: dotnet build JBSnorro.Testing.Tests/JBSnorro.Testing.Tests.csproj --configuration ${{ matrix.configuration }}
    - name: test
      run: dotnet test  JBSnorro.Testing.Tests/JBSnorro.Testing.Tests.csproj --configuration ${{ matrix.configuration }} --framework net8.0
      timeout-minutes: 10
